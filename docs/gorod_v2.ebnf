Gorod = Block .

Block = "{"       
            {VarDefinition}
            {Statement} 
        "}" .

VarDefinition = Type Ident {"," Ident} ";" .

Type = "int" .

Ident = letter {letter | digit | "_"} .

Statement = [Assignment] ";"
            | "read" "(" Ident ")" ";"
            | "write" "(" Expr ")" ";"
            | "if" "(" LogicExpr ")" Block 
            | "for" Assignment "to" Expr "by" Expr "while" "(" LogicExpr ")" Block "rof" ";" . 

Assignment = Ident "=" Expr .

Expr = CondExpr
       | Add . 

Add = Mult [( "+" | "-" ) Mult] .

Mult = Power [( "*" | "/" ) Power] .

Power = Group ["^" Power] .

Group = "(" Expr ")"  
        | Number
        | Ident .

CondExpr = LogicExpr ["?" Expr ":" Expr] .

LogicExpr = Ident ("<" | ">") Expr .

Number = [ "-" ] digit{digit} .
