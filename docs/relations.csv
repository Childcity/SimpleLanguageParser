;(;);*;+;,;-;.;/;:;!;<;=;>;?;Add;Assignment;Block;CondExpr;Expr;Gorod Program;Group;Ident;LogicExpr;Mult;Number;Power;Statement;Type;VarDefinition;^;by;for;if;int;read;rof;to;unknown;while;write;{;};
(;<;;;;;;;;;;;;;;<;;;<; =;;<; =<; =<;<;<;<;;;;;;;;;;;;;;;;;
);;>;;;;;;; =; =>;;;;>;;; =;;;;;;;;;;;;;>;>;;;;;;>;;>;;<;;
*;<;;;;;;;;;;;;;;;;;;;;<;<;;;<; =;;;;;;;;;;;;;;;;;
+;<;;;;;;;;;;;;;;;;;;;;<;<;; =;<;<;;;;;;;;;;;;;;;;;
,;;;;;;;;;;;;;;;;;;;;;; =;;;;;;;;;;;;;;;;;;;;;
-;<;;;;;;;;;;;;;;;;;;;;<;<;; =;<;<;;;;;;;;;;;;;;;;;
/;<;;;;;;;;;;;;;;;;;;;;<;<;;;<; =;;;;;;;;;;;;;;;;;
:; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
!;;;;;;;;;;>;;;;;;>;;;;;;>;;;;;;;;;;>;>;;>;;;;;>;;>;
<; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
=;<;;;;;;;;;;;;;;<;;;<; =;;<;<;<;<;<;<;;;;;;;;;;;;;;;;;
>; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
?; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Add;;>;>;>;;>;;>;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;>;;;;
Assignment;;;;;;;;;; =;;;;;;;;;;;;;;;;;;;;;;;;;;; =;;;;;;
Block;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; =;;;;;;>;
CondExpr;;>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;>;;;;
Expr;; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;; =;;;;;;;; =;;;;
Group;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; =;;;;;;;;;;;;;
Ident;; =;;; =;;;;; =; =; =; =;;;;;;;;;;;;;;;;;>;;;;;;;;;;;;;
LogicExpr;; =;;;;;;;;;;;; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Mult;;>;>; =>;; =>;;>;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;>;;;;
Number;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;;;;;;
Power;;>; =>;>;;>;; =>;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;>;;;;
Statement;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; =;
Type;;;;;;;;;;;;;;;;;;;;;; =;;;;;;;;;;;;;;;;;;;;;
VarDefinition;;;;;;;;;;<;;;;;;<;;;;;;<;;;;; =;;;;;<;<;;<;;;;;<;;;
^;<;;;;;;;;;;;;;; =;;;;;;<;<;;<;<;<;;;;;;;;;;;;;;;;;
by;<;;;;;;;;;;;;;;<;;;<; =;;<;<;<;<;<;<;;;;;;;;;;;;;;;;;
for;;;;;;;;;;;;;;;; =;;;;;;<;;;;;;;;;;;;;;;;;;;;;
if; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
int;;;;;;;;;;;;;;;;;;;;;;>;;;;;;;;;;;;;;;;;;;;;
read; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
rof;;;;;;;;;; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to;<;;;;;;;;;;;;;;<;;;<; =;;<;<;<;<;<;<;;;;;;;;;;;;;;;;;
while; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
write; =;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
{;;;;;;;;;;;;;;;;;;;;;;;;;;;;<; =;;;;;<;;;;;;;;;
};;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;>;;;;;;>;


[
    {
        "(": ;{
            "(": ;"<",
            "Add": ;"<",
            "CondExpr": ;"<",
            "Expr": ;" =",
            "Group": ;"<",
            "Ident": ;" =<",
            "LogicExpr": ;" =<",
            "Mult": ;"<",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        ")": ;{
            ")": ;">",
            ":": ;" =",
            "!": ;" =>",
            "?": ;">",
            "Block": ;" =",
            "^": ;">",
            "by": ;">",
            "to": ;">",
            "while": ;">",
            "{": ;"<"
        }
    },
    {
        "*": ;{
            "(": ;"<",
            "Group": ;"<",
            "Ident": ;"<",
            "Number": ;"<",
            "Power": ;" ="
        }
    },
    {
        "+": ;{
            "(": ;"<",
            "Group": ;"<",
            "Ident": ;"<",
            "Mult": ;" =",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        ",": ;{
            "Ident": ;" ="
        }
    },
    {
        "-": ;{
            "(": ;"<",
            "Group": ;"<",
            "Ident": ;"<",
            "Mult": ;" =",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        "/": ;{
            "(": ;"<",
            "Group": ;"<",
            "Ident": ;"<",
            "Number": ;"<",
            "Power": ;" ="
        }
    },
    {
        ":": ;{
            "(": ;" ="
        }
    },
    {
        "!": ;{
            "!": ;">",
            "Assignment": ;">",
            "Ident": ;">",
            "for": ;">",
            "if": ;">",
            "read": ;">",
            "write": ;">",
            "}": ;">"
        }
    },
    {
        "<": ;{
            "(": ;" ="
        }
    },
    {
        "=": ;{
            "(": ;"<",
            "Add": ;"<",
            "CondExpr": ;"<",
            "Expr": ;" =",
            "Group": ;"<",
            "Ident": ;"<",
            "LogicExpr": ;"<",
            "Mult": ;"<",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        ">": ;{
            "(": ;" ="
        }
    },
    {
        "?": ;{
            "(": ;" ="
        }
    },
    {
        "Add": ;{
            "(": ;"F",
            ")": ;">",
            "*": ;">",
            "+": ;">",
            "-": ;">",
            "/": ;">",
            "Add": ;"L",
            "Group": ;"F",
            "Ident": ;"F",
            "Mult": ;"FL",
            "Number": ;"F",
            "Power": ;"FL",
            "by": ;">",
            "while": ;">"
        }
    },
    {
        "Assignment": ;{
            ")": ;"L",
            "!": ;" =",
            "Ident": ;"F",
            "to": ;" ="
        }
    },
    {
        "Block": ;{
            "rof": ;" =",
            "{": ;"F",
            "}": ;"L>"
        }
    },
    {
        "CondExpr": ;{
            ")": ;">L",
            "Ident": ;"F",
            "LogicExpr": ;"F",
            "by": ;">",
            "while": ;">"
        }
    },
    {
        "Expr": ;{
            "(": ;"F",
            ")": ;" =L",
            "Add": ;"FL",
            "CondExpr": ;"FL",
            "Group": ;"F",
            "Ident": ;"F",
            "LogicExpr": ;"F",
            "Mult": ;"FL",
            "Number": ;"F",
            "Power": ;"FL",
            "by": ;" =",
            "while": ;" ="
        }
    },
    {
        "Group": ;{
            "(": ;"F",
            ")": ;"L",
            "Ident": ;"FL",
            "Number": ;"FL",
            "^": ;" ="
        }
    },
    {
        "Ident": ;{
            ")": ;" =",
            ",": ;" =",
            "!": ;" =",
            "<": ;" =",
            "=": ;" =",
            ">": ;" =",
            "^": ;">"
        }
    },
    {
        "LogicExpr": ;{
            ")": ;" =L",
            "?": ;" =",
            "Ident": ;"F"
        }
    },
    {
        "Mult": ;{
            "(": ;"F",
            ")": ;">",
            "*": ;">",
            "+": ;" =>",
            "-": ;" =>",
            "/": ;">",
            "Add": ;"L",
            "Group": ;"F",
            "Ident": ;"F",
            "Mult": ;"L",
            "Number": ;"F",
            "Power": ;"FL",
            "by": ;">",
            "while": ;">"
        }
    },
    {
        "Number": ;{
            "^": ;">"
        }
    },
    {
        "Power": ;{
            "(": ;"F",
            ")": ;">",
            "*": ;" =>",
            "+": ;">",
            "-": ;">",
            "/": ;" =>",
            "Add": ;"L",
            "Group": ;"F",
            "Ident": ;"F",
            "Mult": ;"L",
            "Number": ;"F",
            "Power": ;"L",
            "by": ;">",
            "while": ;">"
        }
    },
    {
        "Statement": ;{
            "!": ;"FL",
            "Assignment": ;"F",
            "Block": ;"L",
            "Ident": ;"F",
            "for": ;"F",
            "if": ;"F",
            "read": ;"F",
            "write": ;"F",
            "}": ;" =L"
        }
    },
    {
        "Type": ;{
            "Ident": ;" =",
            "int": ;"FL"
        }
    },
    {
        "VarDefinition": ;{
            "!": ;"L<",
            "Assignment": ;"<",
            "Ident": ;"<",
            "Statement": ;" =",
            "Type": ;"F",
            "for": ;"<",
            "if": ;"<",
            "int": ;"F",
            "read": ;"<",
            "write": ;"<"
        }
    },
    {
        "^": ;{
            "(": ;"<",
            "Add": ;" =",
            "Group": ;"<",
            "Ident": ;"<",
            "Mult": ;"<",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        "by": ;{
            "(": ;"<",
            "Add": ;"<",
            "CondExpr": ;"<",
            "Expr": ;" =",
            "Group": ;"<",
            "Ident": ;"<",
            "LogicExpr": ;"<",
            "Mult": ;"<",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        "for": ;{
            "Assignment": ;" =",
            "Ident": ;"<"
        }
    },
    {
        "if": ;{
            "(": ;" ="
        }
    },
    {
        "int": ;{
            "Ident": ;">"
        }
    },
    {
        "read": ;{
            "(": ;" ="
        }
    },
    {
        "rof": ;{
            "!": ;" ="
        }
    },
    {
        "to": ;{
            "(": ;"<",
            "Add": ;"<",
            "CondExpr": ;"<",
            "Expr": ;" =",
            "Group": ;"<",
            "Ident": ;"<",
            "LogicExpr": ;"<",
            "Mult": ;"<",
            "Number": ;"<",
            "Power": ;"<"
        }
    },
    {
        "while": ;{
            "(": ;" ="
        }
    },
    {
        "write": ;{
            "(": ;" ="
        }
    },
    {
        "{": ;{
            "Type": ;"<",
            "VarDefinition": ;" =",
            "int": ;"<"
        }
    },
    {
        "}": ;{
            "rof": ;">",
            "}": ;">"
        }
    }
]
